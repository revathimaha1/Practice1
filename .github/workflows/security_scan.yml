name: Security Workflow

on:
  pull_request:
    #types: [opened, synchronize]

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install bandit codeql-action cyclonedx-bom

      - name: Run Bandit scan
        run: bandit -r .

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v4

      - name: Block PR if critical vulnerabilities found
        if: ${{ !success() }} # Fail if any scan fails
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.number }}
          body: |
            :red_circle: Security scans failed. Pull request blocked due to critical vulnerabilities.

      - name: Auto-merge PR if scans pass
        if: ${{ success() }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.number }}
          body: |
            :green_heart: Security scans passed successfully!
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              sha: context.sha,
              merge_method: "merge",
            })

      - name: Generate SBOM on merge
        if: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}
        run: cyclonedx-bom --output bom.xml

  vulnerability-report:
    runs-on: ubuntu-latest
    needs: [security-checks]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install requests # Add any other required libraries

      - name: Run Python script
        run: python scripts/fetch_alerts.py  # Replace with your script's name
